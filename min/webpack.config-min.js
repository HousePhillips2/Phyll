const Webpack=require("webpack"),path=require("path"),merge=require("webpack-merge"),HMRPlugin=require("webpack-hot-middleware"),ExtractTextPlugin=require("extract-text-webpack-plugin"),HtmlWebpackPlugin=require("html-webpack-plugin"),NpmInstallPlugin=require("npm-install-webpack-plugin"),autoprefixer=require("autoprefixer"),validate=require("webpack-validator"),FaviconsWebpackPlugin=require("favicons-webpack-plugin"),utils=require("./server/helpers/webpack-helpers.js"),nodeModulesPath=path.resolve(__dirname,"node_modules"),TARGET=process.env.npm_lifecycle_event||"a short trip to DEV town.";console.log("Packing for: "+TARGET);const buildPath=path.resolve(__dirname,"dist"),mainPath=path.resolve(__dirname,"src","app.jsx");var appName="app",outputFile=appName+".js";const common={cache:!0,debug:!0,entry:{app:mainPath,vendor:["tether","bootstrap","react-bootstrap","react","react-router","jquery","react-autosuggest","d3"]},output:{path:buildPath,filename:outputFile,sourceMapFilename:"app.map"},module:{loaders:[{test:/\.js[x]?$/,loaders:["babel-loader?presets[]=es2015&presets[]=react&presets[]=stage-0"],exclude:/(node_modules|bower_components)/},{test:/\.css$/,loader:ExtractTextPlugin.extract("css")},{test:/\.less$/,loader:"style!css!less"},{test:/\.scss$/,loader:ExtractTextPlugin.extract("css!sass")},{test:/\.png$/,loader:"url-loader?limit=100000"},{test:/\.jpg$/,loader:"file-loader"},{test:/\.(woff|woff2)(\?v=\d+\.\d+\.\d+)?$/,loader:'url?limit=10000&mimetype=application/font-woff&name=[path][name].[ext]"'},{test:/\.ttf(\?v=\d+\.\d+\.\d+)?$/,loader:"url?limit=10000&mimetype=application/octet-stream"},{test:/\.eot(\?v=\d+\.\d+\.\d+)?$/,loader:"file"},{test:/\.svg(\?v=\d+\.\d+\.\d+)?$/,loader:"url?limit=10000&mimetype=image/svg+xml"}]},plugins:[new NpmInstallPlugin,new Webpack.optimize.OccurrenceOrderPlugin,new Webpack.optimize.CommonsChunkPlugin("vendor","externals.js"),new ExtractTextPlugin("assets/style.css",{allChunks:!0}),new HtmlWebpackPlugin({template:"./src/index.template.ejs",inject:"body"}),new Webpack.ProvidePlugin({$:"jquery",jQuery:"jquery",Tether:"tether"})],postcss:function(){return[autoprefixer({browsers:["last 3 versions"]})]}};"production"!==TARGET&&(module.exports=merge(common,{devtool:"eval-source-map",devServer:{historyApiFallback:!0},output:{publicPath:""},plugins:[new NpmInstallPlugin({save:!0})]})),"production"===TARGET&&(module.exports=merge(common,{devtool:"source-map",output:{path:buildPath},plugins:[]})),module.exports=validate(common);